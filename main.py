#main.py
import asyncio
import aiohttp
from gtts import gTTS
import os
from aiogram import Bot, Dispatcher, types, Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, FSInputFile
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from config import API_TOKEN, WEATHER_API_KEY
import random
from googletrans import Translator 


bot = Bot(token=API_TOKEN)
dp = Dispatcher()

router = Router()

translator = Translator()  # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞

async def main():
     # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
    dp.include_router(router)

    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ù–∞–∂–º–∏—Ç–µ Ctrl + C –¥–ª—è –≤—ã—Ö–æ–¥–∞.")

    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()
        print("‚úÖ –°–µ—Å—Å–∏—è –±–æ—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∞.")


@router.message(Command(commands=['help']))
async def help_cmd(message: Message):
    """–í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥"""
    help_text = (
        "üõ† –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
        "üìå /start ‚Äî –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞.\n"
        "üìå /help ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n"
        "üìå /weatherüåç –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ\n" 
        "üìå  –•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –æ–± –ò–ò –Ω–∞–±–µ—Ä–∏—Ç–µ - —á—Ç–æ —Ç–∞–∫–æ–µ –ò–ò?\n"
        "üìå /photo ‚Äî —Ä–∞–Ω–¥–æ–º–Ω–æ–µ (—Å–ª—É—á–∞–π–Ω–æ–µ) —Ñ–æ—Ç–æ.\n" 
        "üìå /audio ‚Äî –ó–∞–≥—Ä—É–∑–∏—Ç—å –∞—É–¥–∏–æ.\n"
        "üìå /video ‚Äî –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ.\n"
        "üìå /training ‚Äî –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ.\n"
    )
    await message.answer(help_text)

@router.message(CommandStart())
async def start(message: Message):
    await message.answer(f'Hi, {message.from_user.full_name}')


# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
class WeatherState(StatesGroup):
    waiting_for_city = State()

async def get_weather(city: str) -> str:
    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&units=metric&lang=ru"
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            if response.status == 200:
                data = await response.json()
                weather = data['weather'][0]['description']
                temp = data['main']['temp']
                return f"–ü–æ–≥–æ–¥–∞ –≤ {city}: {weather}, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C"
            else:
                return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞."

@router.message(Command("weather"))
async def weather_cmd(message: Message, state: FSMContext):
    """–ó–∞–ø—Ä–æ—Å –≥–æ—Ä–æ–¥–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    await message.answer("üåç –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É. –ß—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –Ω–∞–±–µ—Ä–∏—Ç–µ /cancel")
    await state.set_state(WeatherState.waiting_for_city)

@router.message(Command("cancel"))
async def cancel(message: Message, state: FSMContext):
    """–í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞ """    
    await state.clear()
    await message.answer("üö´ –†–µ–∂–∏–º  –æ—Ç–∫–ª—é—á–µ–Ω.")

@router.message(WeatherState.waiting_for_city)
async def city_handler(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–µ–¥—ë–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≥–æ—Ä–æ–¥"""
    city = message.text.strip()
    weather_info = await get_weather(city)
    await message.answer(weather_info)

@router.message(F.text == "—á—Ç–æ —Ç–∞–∫–æ–µ –ò–ò?")
async def aitext(message: Message):
    await message.answer('–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç (–ò–ò) ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–≤ –∏–ª–∏ –º–∞—à–∏–Ω –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –æ–±—ã—á–Ω–æ —Ç—Ä–µ–±—É—é—Ç —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —É–º–∞.')


@router.message(F.photo)
async def react_photo(message: Message):
      list = ['–û–≥–æ, –∫–∞–∫–∞—è —Ñ–æ—Ç–∫–∞!', '–ù–µ–ø–æ–Ω—è—Ç–Ω–æ, —á—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ', '–ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π –º–Ω–µ —Ç–∞–∫–æ–µ –±–æ–ª—å—à–µ']
      rand_answ = random.choice(list)
      await message.answer(rand_answ)
      await bot.download(message.photo[-1], destination=f'tmp/{message.photo[-1].file_id}.jpg')

@router.message(Command('photo', prefix='&'))
async def photo(message: Message):
      list = ['https://ru.wikihow.com/—É–∑–Ω–∞—Ç—å-–∞–¥—Ä–µ—Å-(URL)-–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è#/–§–∞–π–ª:Get-the-URL-for-Pictures-Step-5-Version-3.jpg', 'https://www.wikihow.com/images/thumb/2/21/Get-the-URL-for-Pictures-Step-5-Version-3.jpg/v4-728px-Get-the-URL-for-Pictures-Step-5-Version-3.jpg']
      rand_photo = random.choice(list)
      await message.answer_photo(rand_photo, '–≠—Ç–æ –æ—á–µ–Ω—å –∫—Ä—É—Ç–æ–µ —Ñ–æ—Ç–æ')

@router.message(Command('video'))
async def video(message: Message):
    video = FSInputFile("WhatsApp.mp4")
    await bot.send_chat_action(message.chat.id, 'upload_video')
    await bot.send_video(message.chat.id, video)


@router.message(Command('audio'))
async def audio(message: Message):
    audio = FSInputFile("signal-vyizova-2.mp3")
    await bot.send_chat_action(message.chat.id, 'upload_audio')
    await bot.send_audio(message.chat.id, audio)


@router.message(Command('training'))
async def training(message: Message):
   training_list = [
       "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ 1:\\n1. –°–∫—Ä—É—á–∏–≤–∞–Ω–∏—è: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\\n2. –í–µ–ª–æ—Å–∏–ø–µ–¥: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 20 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π (–∫–∞–∂–¥–∞—è —Å—Ç–æ—Ä–æ–Ω–∞)\\n3. –ü–ª–∞–Ω–∫–∞: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 30 —Å–µ–∫—É–Ω–¥",
       "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ 2:\\n1. –ü–æ–¥—ä–µ–º—ã –Ω–æ–≥: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\\n2. –†—É—Å—Å–∫–∏–π —Ç–≤–∏—Å—Ç: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 20 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π (–∫–∞–∂–¥–∞—è —Å—Ç–æ—Ä–æ–Ω–∞)\\n3. –ü–ª–∞–Ω–∫–∞ —Å –ø–æ–¥–Ω—è—Ç–æ–π –Ω–æ–≥–æ–π: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 20 —Å–µ–∫—É–Ω–¥ (–∫–∞–∂–¥–∞—è –Ω–æ–≥–∞)",
       "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ 3:\\n1. –°–∫—Ä—É—á–∏–≤–∞–Ω–∏—è —Å –ø–æ–¥–Ω—è—Ç—ã–º–∏ –Ω–æ–≥–∞–º–∏: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\\n2. –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ –Ω–æ–∂–Ω–∏—Ü—ã: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 20 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\\n3. –ë–æ–∫–æ–≤–∞—è –ø–ª–∞–Ω–∫–∞: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 20 —Å–µ–∫—É–Ω–¥ (–∫–∞–∂–¥–∞—è —Å—Ç–æ—Ä–æ–Ω–∞)"
   ]
   rand_tr = random.choice(training_list)
   await message.answer(f"–≠—Ç–æ –≤–∞—à–∞ –º–∏–Ω–∏-—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è {rand_tr}")

  #  tts = gTTS(text=rand_tr, lang='ru')
  #  tts.save("training.mp3")
  
  #  audio = FSInputFile('training.mp3')
  #  await bot.send_audio(message.chat.id, audio)
  #  os.remove("training.mp3")
   tts = gTTS(text=rand_tr, lang='ru')
   tts.save("training.ogg")
   audio = FSInputFile("training.ogg")
   await bot.send_voice(chat_id=message.chat.id, voice=audio)
   os.remove("training.ogg")


@dp.message(Command('voice'))
async def voice(message: Message):
    voice = FSInputFile("sample1.ogg")
    await message.answer_voice(voice)


@dp.message(Command('doc'))
async def doc(message: Message):
    doc = FSInputFile("karkach_bot.pdf")
    await bot.send_document(message.chat.id, doc)


@router.message(F.text)
async def translate_text(message: Message):
    """–ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π"""
    translated = translator.translate(message.text, dest='en')
    await message.answer(f"–ü–µ—Ä–µ–≤–æ–¥: {translated.text}")


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n‚ùå –ë–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω —á–µ—Ä–µ–∑ Ctrl + C.")